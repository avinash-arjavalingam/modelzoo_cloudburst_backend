// Code generated by protoc-gen-go. DO NOT EDIT.
// source: droplet.proto

package droplet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"

	. "shared"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// An enum representing the different types of serializers used primarily for
// Python values.
type SerializerType int32

const (
	// The default serializer type, which is cloudpickle.
	SerializerType_DEFAULT SerializerType = 0
	// The numpy serializer uses PyArrow for maximum efficiency.
	SerializerType_NUMPY SerializerType = 1
)

var SerializerType_name = map[int32]string{
	0: "DEFAULT",
	1: "NUMPY",
}

var SerializerType_value = map[string]int32{
	"DEFAULT": 0,
	"NUMPY":   1,
}

func (x SerializerType) String() string {
	return proto.EnumName(SerializerType_name, int32(x))
}

func (SerializerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{0}
}

// The error type returned by an executor or scheduler for an individual request.
type DropletError int32

const (
	// This request did not generate an error.
	DropletError_NO_DROPLET_ERROR DropletError = 0
	// The requested function was not stored in the KVS. This might occasionally
	// occur because of the eventual nature of the KVS.
	DropletError_FUNC_NOT_FOUND DropletError = 1
	// The function that an executor was requested to execute is not pinned at
	// that executor.
	DropletError_NOT_PINNED DropletError = 2
	// The user code threw an error while executing.
	DropletError_EXECUTION_ERROR DropletError = 3
	// The DAG for which the request was made does not exist.
	DropletError_NO_SUCH_DAG DropletError = 4
	// There are no available resources on which we can deploy this request. This
	// should occur rarely, if ever, and should automatically resolve itself via
	// autoscaling decisions.
	DropletError_NO_RESOURCES DropletError = 5
	// The DAG attempting to be created already exists.
	DropletError_DAG_ALREADY_EXISTS DropletError = 6
)

var DropletError_name = map[int32]string{
	0: "NO_DROPLET_ERROR",
	1: "FUNC_NOT_FOUND",
	2: "NOT_PINNED",
	3: "EXECUTION_ERROR",
	4: "NO_SUCH_DAG",
	5: "NO_RESOURCES",
	6: "DAG_ALREADY_EXISTS",
}

var DropletError_value = map[string]int32{
	"NO_DROPLET_ERROR":   0,
	"FUNC_NOT_FOUND":     1,
	"NOT_PINNED":         2,
	"EXECUTION_ERROR":    3,
	"NO_SUCH_DAG":        4,
	"NO_RESOURCES":       5,
	"DAG_ALREADY_EXISTS": 6,
}

func (x DropletError) String() string {
	return proto.EnumName(DropletError_name, int32(x))
}

func (DropletError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{1}
}

// The consistency mode to be used with an individual request.
type ConsistencyType int32

const (
	// Normal consistency means that any non-causal lattice types are supported
	// -- sets, last writer wins, etc.
	ConsistencyType_NORMAL ConsistencyType = 0
	// Single-key causal mode is supported (see Anna KVS definitions for more
	// detail).
	ConsistencyType_SINGLE ConsistencyType = 1
	// Multi-key causal more is supported (see Anna KVS definitions for more
	// detail).
	ConsistencyType_MULTI ConsistencyType = 2
)

var ConsistencyType_name = map[int32]string{
	0: "NORMAL",
	1: "SINGLE",
	2: "MULTI",
}

var ConsistencyType_value = map[string]int32{
	"NORMAL": 0,
	"SINGLE": 1,
	"MULTI":  2,
}

func (x ConsistencyType) String() string {
	return proto.EnumName(ConsistencyType_name, int32(x))
}

func (ConsistencyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{2}
}

// A message representing an individual, serialized Python function.
type Function struct {
	// The name of this function.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The serialized representation of this function.
	Body                 []byte   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Function) Reset()         { *m = Function{} }
func (m *Function) String() string { return proto.CompactTextString(m) }
func (*Function) ProtoMessage()    {}
func (*Function) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{0}
}

func (m *Function) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Function.Unmarshal(m, b)
}
func (m *Function) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Function.Marshal(b, m, deterministic)
}
func (m *Function) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Function.Merge(m, src)
}
func (m *Function) XXX_Size() int {
	return xxx_messageInfo_Function.Size(m)
}
func (m *Function) XXX_DiscardUnknown() {
	xxx_messageInfo_Function.DiscardUnknown(m)
}

var xxx_messageInfo_Function proto.InternalMessageInfo

func (m *Function) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Function) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// Any arbitrary value that is being moved through the system -- can be used to
// represent function arguments, return values, etc.
type Value struct {
	// The serialized version of the data.
	Body []byte `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	// The serializer used to create the body; if none is specified, the enum
	// uses DEFAULT.
	Type                 SerializerType `protobuf:"varint,2,opt,name=type,proto3,enum=SerializerType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Value) Reset()         { *m = Value{} }
func (m *Value) String() string { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()    {}
func (*Value) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{1}
}

func (m *Value) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Value.Unmarshal(m, b)
}
func (m *Value) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Value.Marshal(b, m, deterministic)
}
func (m *Value) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Value.Merge(m, src)
}
func (m *Value) XXX_Size() int {
	return xxx_messageInfo_Value.Size(m)
}
func (m *Value) XXX_DiscardUnknown() {
	xxx_messageInfo_Value.DiscardUnknown(m)
}

var xxx_messageInfo_Value proto.InternalMessageInfo

func (m *Value) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Value) GetType() SerializerType {
	if m != nil {
		return m.Type
	}
	return SerializerType_DEFAULT
}

// A request to execute a pre-registered function a single time.
type FunctionCall struct {
	// The name of the fucntion to execute.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A unique ID used to match asynchronous requests to responses.
	RequestId uint32 `protobuf:"varint,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// The arguments to be passed into the function.
	Arguments *Arguments `protobuf:"bytes,3,opt,name=arguments,proto3" json:"arguments,omitempty"`
	// An optional field that allows the user to specify where the server should
	// store the result of the request. If none is specified, one is
	// automatically generated and returned to the user.
	ResponseKey string `protobuf:"bytes,4,opt,name=response_key,json=responseKey,proto3" json:"response_key,omitempty"`
	// Specify what consistency mode this function should be executed in.
	Consistency          ConsistencyType `protobuf:"varint,5,opt,name=consistency,proto3,enum=ConsistencyType" json:"consistency,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FunctionCall) Reset()         { *m = FunctionCall{} }
func (m *FunctionCall) String() string { return proto.CompactTextString(m) }
func (*FunctionCall) ProtoMessage()    {}
func (*FunctionCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{2}
}

func (m *FunctionCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FunctionCall.Unmarshal(m, b)
}
func (m *FunctionCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FunctionCall.Marshal(b, m, deterministic)
}
func (m *FunctionCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FunctionCall.Merge(m, src)
}
func (m *FunctionCall) XXX_Size() int {
	return xxx_messageInfo_FunctionCall.Size(m)
}
func (m *FunctionCall) XXX_DiscardUnknown() {
	xxx_messageInfo_FunctionCall.DiscardUnknown(m)
}

var xxx_messageInfo_FunctionCall proto.InternalMessageInfo

func (m *FunctionCall) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FunctionCall) GetRequestId() uint32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *FunctionCall) GetArguments() *Arguments {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *FunctionCall) GetResponseKey() string {
	if m != nil {
		return m.ResponseKey
	}
	return ""
}

func (m *FunctionCall) GetConsistency() ConsistencyType {
	if m != nil {
		return m.Consistency
	}
	return ConsistencyType_NORMAL
}

// A serialized representation of a Droplet DAG, which consists of a set of
// functions and links between pairs of functions.
type Dag struct {
	// A unique name used to refer to this DAG.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The set of functions executed as a part of this DAG.
	Functions []string `protobuf:"bytes,2,rep,name=functions,proto3" json:"functions,omitempty"`
	// The set of links between the functions that comprise this DAG. There are
	// two currently unenforced integrity constraints:
	// (1) Every function must be connected to at least one other function
	// (2) The DAG can have potentially many sources but at most one sink
	Connections          []*Dag_Link `protobuf:"bytes,3,rep,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Dag) Reset()         { *m = Dag{} }
func (m *Dag) String() string { return proto.CompactTextString(m) }
func (*Dag) ProtoMessage()    {}
func (*Dag) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{3}
}

func (m *Dag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dag.Unmarshal(m, b)
}
func (m *Dag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dag.Marshal(b, m, deterministic)
}
func (m *Dag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dag.Merge(m, src)
}
func (m *Dag) XXX_Size() int {
	return xxx_messageInfo_Dag.Size(m)
}
func (m *Dag) XXX_DiscardUnknown() {
	xxx_messageInfo_Dag.DiscardUnknown(m)
}

var xxx_messageInfo_Dag proto.InternalMessageInfo

func (m *Dag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Dag) GetFunctions() []string {
	if m != nil {
		return m.Functions
	}
	return nil
}

func (m *Dag) GetConnections() []*Dag_Link {
	if m != nil {
		return m.Connections
	}
	return nil
}

// A representation of a link between a specific pair of functions in the
// DAG. Requests always move from sources to sinks.
type Dag_Link struct {
	// The source (origin) of the link.
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// The sink (destination) of the link.
	Sink                 string   `protobuf:"bytes,2,opt,name=sink,proto3" json:"sink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dag_Link) Reset()         { *m = Dag_Link{} }
func (m *Dag_Link) String() string { return proto.CompactTextString(m) }
func (*Dag_Link) ProtoMessage()    {}
func (*Dag_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{3, 0}
}

func (m *Dag_Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dag_Link.Unmarshal(m, b)
}
func (m *Dag_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dag_Link.Marshal(b, m, deterministic)
}
func (m *Dag_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dag_Link.Merge(m, src)
}
func (m *Dag_Link) XXX_Size() int {
	return xxx_messageInfo_Dag_Link.Size(m)
}
func (m *Dag_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Dag_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Dag_Link proto.InternalMessageInfo

func (m *Dag_Link) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Dag_Link) GetSink() string {
	if m != nil {
		return m.Sink
	}
	return ""
}

// A list of Values that represents the arguments for a particular function
// call.
type Arguments struct {
	// The set of arguments.
	Values               []*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Arguments) Reset()         { *m = Arguments{} }
func (m *Arguments) String() string { return proto.CompactTextString(m) }
func (*Arguments) ProtoMessage()    {}
func (*Arguments) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{4}
}

func (m *Arguments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arguments.Unmarshal(m, b)
}
func (m *Arguments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arguments.Marshal(b, m, deterministic)
}
func (m *Arguments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arguments.Merge(m, src)
}
func (m *Arguments) XXX_Size() int {
	return xxx_messageInfo_Arguments.Size(m)
}
func (m *Arguments) XXX_DiscardUnknown() {
	xxx_messageInfo_Arguments.DiscardUnknown(m)
}

var xxx_messageInfo_Arguments proto.InternalMessageInfo

func (m *Arguments) GetValues() []*Value {
	if m != nil {
		return m.Values
	}
	return nil
}

// A request for a single execution of a previously registered DAG of
// functions.
type DagCall struct {
	// The name of the DAG to be executed.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A per-function list of arguments that are fixed at execution time.
	// Arguments that are derived from upstream function calls are automatically
	// populated by the runtime.
	FunctionArgs map[string]*Arguments `protobuf:"bytes,2,rep,name=function_args,json=functionArgs,proto3" json:"function_args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The address to which results should be sent. If none is specified, then
	// thre result is automatically stored in the KVS at a key generated by the
	// scheduler.
	ResponseAddress string `protobuf:"bytes,3,opt,name=response_address,json=responseAddress,proto3" json:"response_address,omitempty"`
	// The consistency mode in which this request is being executed; if none is
	// specified, this will default to the NORMAL mode.
	Consistency ConsistencyType `protobuf:"varint,4,opt,name=consistency,proto3,enum=ConsistencyType" json:"consistency,omitempty"`
	// The output_key at which the result of this DAG should be stored.
	OutputKey string `protobuf:"bytes,5,opt,name=output_key,json=outputKey,proto3" json:"output_key,omitempty"`
	// A logical unique ID associated with the requesting client. This can
	// persist across requests and is used for causal metadata.
	ClientId             string   `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DagCall) Reset()         { *m = DagCall{} }
func (m *DagCall) String() string { return proto.CompactTextString(m) }
func (*DagCall) ProtoMessage()    {}
func (*DagCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{5}
}

func (m *DagCall) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DagCall.Unmarshal(m, b)
}
func (m *DagCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DagCall.Marshal(b, m, deterministic)
}
func (m *DagCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DagCall.Merge(m, src)
}
func (m *DagCall) XXX_Size() int {
	return xxx_messageInfo_DagCall.Size(m)
}
func (m *DagCall) XXX_DiscardUnknown() {
	xxx_messageInfo_DagCall.DiscardUnknown(m)
}

var xxx_messageInfo_DagCall proto.InternalMessageInfo

func (m *DagCall) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DagCall) GetFunctionArgs() map[string]*Arguments {
	if m != nil {
		return m.FunctionArgs
	}
	return nil
}

func (m *DagCall) GetResponseAddress() string {
	if m != nil {
		return m.ResponseAddress
	}
	return ""
}

func (m *DagCall) GetConsistency() ConsistencyType {
	if m != nil {
		return m.Consistency
	}
	return ConsistencyType_NORMAL
}

func (m *DagCall) GetOutputKey() string {
	if m != nil {
		return m.OutputKey
	}
	return ""
}

func (m *DagCall) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

// A message used to respond to most kinds of user requests.
type GenericResponse struct {
	// Captures whether or not the request succeeded.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// If the request was successful and has a KVS key associated with it, the
	// key will be stored in this field.
	ResponseId string `protobuf:"bytes,2,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"`
	// An optional field to inform the user what the error was if the request was
	// not successful.
	Error                DropletError `protobuf:"varint,3,opt,name=error,proto3,enum=DropletError" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GenericResponse) Reset()         { *m = GenericResponse{} }
func (m *GenericResponse) String() string { return proto.CompactTextString(m) }
func (*GenericResponse) ProtoMessage()    {}
func (*GenericResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{6}
}

func (m *GenericResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericResponse.Unmarshal(m, b)
}
func (m *GenericResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericResponse.Marshal(b, m, deterministic)
}
func (m *GenericResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericResponse.Merge(m, src)
}
func (m *GenericResponse) XXX_Size() int {
	return xxx_messageInfo_GenericResponse.Size(m)
}
func (m *GenericResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenericResponse proto.InternalMessageInfo

func (m *GenericResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GenericResponse) GetResponseId() string {
	if m != nil {
		return m.ResponseId
	}
	return ""
}

func (m *GenericResponse) GetError() DropletError {
	if m != nil {
		return m.Error
	}
	return DropletError_NO_DROPLET_ERROR
}

// A message representing a generated schedule for an individual DAG execution
// request.
type DagSchedule struct {
	// A UUID associated with this execution.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The actual DAG that we are executing.
	Dag *Dag `protobuf:"bytes,2,opt,name=dag,proto3" json:"dag,omitempty"`
	// The function in the DAG the receiver is responsible for executing.
	TargetFunction string `protobuf:"bytes,3,opt,name=target_function,json=targetFunction,proto3" json:"target_function,omitempty"`
	// The consistency mode used to execute this DAG; if none is specified, the
	// default is NORMAL.
	Consistency ConsistencyType `protobuf:"varint,4,opt,name=consistency,proto3,enum=ConsistencyType" json:"consistency,omitempty"`
	// The list of upstream triggers that should be received by this executor
	// before executing its function. This is equivalent to the set of functions
	// which are upstream from this particular function.
	Triggers []string `protobuf:"bytes,5,rep,name=triggers,proto3" json:"triggers,omitempty"`
	// The mappings from function names to IP-port pairs (representing executors)
	// in this schedule. This is used by each executor to send downstream
	// triggers.
	Locations map[string]string `protobuf:"bytes,6,rep,name=locations,proto3" json:"locations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The pre-fixed arguments for each stage, which are specified in the
	// DAGCall. Arguments depending on upstream functions are automatically
	// resolved by the runtime.
	Arguments map[string]*Arguments `protobuf:"bytes,7,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// An optional field with an IP-port pair where the client is listening for
	// results; if this field is empty, the result is put into the KVS.
	ResponseAddress string `protobuf:"bytes,8,opt,name=response_address,json=responseAddress,proto3" json:"response_address,omitempty"`
	// The output key at which the result of this DAG will be stored upon
	// completion.
	OutputKey string `protobuf:"bytes,9,opt,name=output_key,json=outputKey,proto3" json:"output_key,omitempty"`
	// A logical unique ID associated with the requesting client. This can
	// persist across requests and is used for causal metadata.
	ClientId string `protobuf:"bytes,10,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Assigns a timestamp to this schedule based on when it first came into the
	// system -- this is used to calculate end-to-end latency.
	StartTime            float64  `protobuf:"fixed64,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DagSchedule) Reset()         { *m = DagSchedule{} }
func (m *DagSchedule) String() string { return proto.CompactTextString(m) }
func (*DagSchedule) ProtoMessage()    {}
func (*DagSchedule) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{7}
}

func (m *DagSchedule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DagSchedule.Unmarshal(m, b)
}
func (m *DagSchedule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DagSchedule.Marshal(b, m, deterministic)
}
func (m *DagSchedule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DagSchedule.Merge(m, src)
}
func (m *DagSchedule) XXX_Size() int {
	return xxx_messageInfo_DagSchedule.Size(m)
}
func (m *DagSchedule) XXX_DiscardUnknown() {
	xxx_messageInfo_DagSchedule.DiscardUnknown(m)
}

var xxx_messageInfo_DagSchedule proto.InternalMessageInfo

func (m *DagSchedule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DagSchedule) GetDag() *Dag {
	if m != nil {
		return m.Dag
	}
	return nil
}

func (m *DagSchedule) GetTargetFunction() string {
	if m != nil {
		return m.TargetFunction
	}
	return ""
}

func (m *DagSchedule) GetConsistency() ConsistencyType {
	if m != nil {
		return m.Consistency
	}
	return ConsistencyType_NORMAL
}

func (m *DagSchedule) GetTriggers() []string {
	if m != nil {
		return m.Triggers
	}
	return nil
}

func (m *DagSchedule) GetLocations() map[string]string {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *DagSchedule) GetArguments() map[string]*Arguments {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *DagSchedule) GetResponseAddress() string {
	if m != nil {
		return m.ResponseAddress
	}
	return ""
}

func (m *DagSchedule) GetOutputKey() string {
	if m != nil {
		return m.OutputKey
	}
	return ""
}

func (m *DagSchedule) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *DagSchedule) GetStartTime() float64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

// A trigger that enables a downstream executor to begin running a function
// that it is responsible for.
type DagTrigger struct {
	// The unique ID of this DAG execution, which is propgated in a DAGSchedule.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the function this trigger is intended for.
	TargetFunction string `protobuf:"bytes,2,opt,name=target_function,json=targetFunction,proto3" json:"target_function,omitempty"`
	// The name of the function from which this trigger is being sent.
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// Arguments for this downstream function that were generated by the upstream
	// function's output.
	Arguments *Arguments `protobuf:"bytes,4,opt,name=arguments,proto3" json:"arguments,omitempty"`
	// If this function depends on an upstream executor to cache a particular
	// KeyVersion for a consistency guarantee, this map tracks which IP addresses
	// are responsible for each key.
	VersionLocations map[string]*KeyVersionList `protobuf:"bytes,5,rep,name=version_locations,json=versionLocations,proto3" json:"version_locations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The list of causal dependencies that have been accumulated until this
	// point in this DAG execution.
	Dependencies         []*KeyVersion `protobuf:"bytes,6,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DagTrigger) Reset()         { *m = DagTrigger{} }
func (m *DagTrigger) String() string { return proto.CompactTextString(m) }
func (*DagTrigger) ProtoMessage()    {}
func (*DagTrigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_28338918068ad376, []int{8}
}

func (m *DagTrigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DagTrigger.Unmarshal(m, b)
}
func (m *DagTrigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DagTrigger.Marshal(b, m, deterministic)
}
func (m *DagTrigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DagTrigger.Merge(m, src)
}
func (m *DagTrigger) XXX_Size() int {
	return xxx_messageInfo_DagTrigger.Size(m)
}
func (m *DagTrigger) XXX_DiscardUnknown() {
	xxx_messageInfo_DagTrigger.DiscardUnknown(m)
}

var xxx_messageInfo_DagTrigger proto.InternalMessageInfo

func (m *DagTrigger) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DagTrigger) GetTargetFunction() string {
	if m != nil {
		return m.TargetFunction
	}
	return ""
}

func (m *DagTrigger) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *DagTrigger) GetArguments() *Arguments {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *DagTrigger) GetVersionLocations() map[string]*KeyVersionList {
	if m != nil {
		return m.VersionLocations
	}
	return nil
}

func (m *DagTrigger) GetDependencies() []*KeyVersion {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func init() {
	proto.RegisterEnum("SerializerType", SerializerType_name, SerializerType_value)
	proto.RegisterEnum("DropletError", DropletError_name, DropletError_value)
	proto.RegisterEnum("ConsistencyType", ConsistencyType_name, ConsistencyType_value)
	proto.RegisterType((*Function)(nil), "Function")
	proto.RegisterType((*Value)(nil), "Value")
	proto.RegisterType((*FunctionCall)(nil), "FunctionCall")
	proto.RegisterType((*Dag)(nil), "Dag")
	proto.RegisterType((*Dag_Link)(nil), "Dag.Link")
	proto.RegisterType((*Arguments)(nil), "Arguments")
	proto.RegisterType((*DagCall)(nil), "DagCall")
	proto.RegisterMapType((map[string]*Arguments)(nil), "DagCall.FunctionArgsEntry")
	proto.RegisterType((*GenericResponse)(nil), "GenericResponse")
	proto.RegisterType((*DagSchedule)(nil), "DagSchedule")
	proto.RegisterMapType((map[string]*Arguments)(nil), "DagSchedule.ArgumentsEntry")
	proto.RegisterMapType((map[string]string)(nil), "DagSchedule.LocationsEntry")
	proto.RegisterType((*DagTrigger)(nil), "DagTrigger")
	proto.RegisterMapType((map[string]*KeyVersionList)(nil), "DagTrigger.VersionLocationsEntry")
}

func init() { proto.RegisterFile("droplet.proto", fileDescriptor_28338918068ad376) }

var fileDescriptor_28338918068ad376 = []byte{
	// 977 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x8e, 0x9b, 0x46,
	0x14, 0x5e, 0xf0, 0xcf, 0x9a, 0x83, 0xd7, 0x26, 0xd3, 0x74, 0x85, 0x9c, 0xfe, 0x38, 0x8e, 0xaa,
	0xba, 0x1b, 0x89, 0x4a, 0x6e, 0x2f, 0xda, 0xaa, 0x52, 0x6b, 0x19, 0x76, 0x63, 0xad, 0x17, 0x56,
	0x63, 0x1c, 0x25, 0x57, 0x88, 0xc0, 0x84, 0xa0, 0xf5, 0x82, 0x33, 0xe0, 0x95, 0xdc, 0x27, 0xc9,
	0x73, 0xf4, 0x11, 0x7a, 0xd1, 0xc7, 0xe8, 0xb3, 0x54, 0x33, 0x80, 0x31, 0x1b, 0x1a, 0x55, 0x7b,
	0x37, 0xf3, 0x1d, 0xce, 0xef, 0xf7, 0xcd, 0xb1, 0xe1, 0xc4, 0xa7, 0xf1, 0x66, 0x4d, 0x52, 0x6d,
	0x43, 0xe3, 0x34, 0x1e, 0x74, 0x93, 0x77, 0x2e, 0x25, 0x7e, 0x76, 0x1b, 0x4d, 0xa0, 0x73, 0xbe,
	0x8d, 0xbc, 0x34, 0x8c, 0x23, 0x84, 0xa0, 0x19, 0xb9, 0xb7, 0x44, 0x15, 0x86, 0xc2, 0x58, 0xc2,
	0xfc, 0xcc, 0xb0, 0x37, 0xb1, 0xbf, 0x53, 0xc5, 0xa1, 0x30, 0xee, 0x62, 0x7e, 0x1e, 0xfd, 0x0e,
	0xad, 0x97, 0xee, 0x7a, 0x5b, 0x1a, 0x85, 0xd2, 0x88, 0x9e, 0x41, 0x33, 0xdd, 0x6d, 0x08, 0x77,
	0xe8, 0x4d, 0xfa, 0xda, 0x92, 0xd0, 0xd0, 0x5d, 0x87, 0x7f, 0x10, 0x6a, 0xef, 0x36, 0x04, 0x73,
	0xe3, 0xe8, 0x2f, 0x01, 0xba, 0x45, 0xda, 0x99, 0xbb, 0x5e, 0xd7, 0xa6, 0xfe, 0x12, 0x80, 0x92,
	0xf7, 0x5b, 0x92, 0xa4, 0x4e, 0xe8, 0xf3, 0x78, 0x27, 0x58, 0xca, 0x91, 0xb9, 0x8f, 0xc6, 0x20,
	0xb9, 0x34, 0xd8, 0xde, 0x92, 0x28, 0x4d, 0xd4, 0xc6, 0x50, 0x18, 0xcb, 0x13, 0xd0, 0xa6, 0x05,
	0x82, 0x4b, 0x23, 0x7a, 0x0a, 0x5d, 0x4a, 0x92, 0x4d, 0x1c, 0x25, 0xc4, 0xb9, 0x21, 0x3b, 0xb5,
	0xc9, 0x93, 0xc8, 0x05, 0x76, 0x49, 0x76, 0x68, 0x02, 0xb2, 0x17, 0x47, 0x49, 0x98, 0xa4, 0x24,
	0xf2, 0x76, 0x6a, 0x8b, 0x17, 0xaf, 0x68, 0xb3, 0x12, 0xe3, 0xd5, 0x1f, 0x7e, 0x34, 0xfa, 0x20,
	0x40, 0x43, 0x77, 0x83, 0xda, 0xda, 0xbf, 0x00, 0xe9, 0x6d, 0xde, 0x5f, 0xa2, 0x8a, 0xc3, 0xc6,
	0x58, 0xc2, 0x25, 0x80, 0x9e, 0xf3, 0x6c, 0x11, 0xc9, 0xed, 0x8d, 0x61, 0x63, 0x2c, 0x4f, 0x24,
	0x4d, 0x77, 0x03, 0x6d, 0x11, 0x46, 0x37, 0xf8, 0xd0, 0x3a, 0x98, 0x40, 0x93, 0x81, 0xe8, 0x14,
	0xda, 0x49, 0xbc, 0xa5, 0x5e, 0x91, 0x28, 0xbf, 0xb1, 0xf4, 0x49, 0x18, 0xdd, 0xf0, 0x01, 0x49,
	0x98, 0x9f, 0x47, 0xcf, 0x41, 0xda, 0x4f, 0x02, 0x7d, 0x05, 0xed, 0x3b, 0x46, 0x57, 0xa2, 0x0a,
	0x3c, 0x51, 0x5b, 0xe3, 0xec, 0xe1, 0x1c, 0x1d, 0xfd, 0x2d, 0xc2, 0xb1, 0xee, 0x06, 0xff, 0xc9,
	0xc3, 0x6f, 0x70, 0x52, 0x94, 0xee, 0xb8, 0x34, 0xc8, 0xfa, 0x91, 0x27, 0x03, 0x2d, 0x77, 0xd2,
	0x0a, 0x26, 0xa7, 0x34, 0x48, 0x8c, 0x28, 0xa5, 0x3b, 0xdc, 0x7d, 0x7b, 0x00, 0xa1, 0xef, 0x40,
	0xd9, 0xcf, 0xdf, 0xf5, 0x7d, 0x4a, 0x92, 0x8c, 0x30, 0x09, 0xf7, 0x0b, 0x7c, 0x9a, 0xc1, 0xf7,
	0x79, 0x68, 0xfe, 0x0f, 0x1e, 0x98, 0x4e, 0xe2, 0x6d, 0xba, 0xd9, 0xa6, 0x9c, 0xdc, 0x16, 0x0f,
	0x2c, 0x65, 0x08, 0xa3, 0xf6, 0x09, 0x48, 0xde, 0x3a, 0x24, 0x11, 0x57, 0x51, 0x9b, 0x5b, 0x3b,
	0x19, 0x30, 0xf7, 0x07, 0x97, 0xf0, 0xe8, 0xa3, 0xea, 0x91, 0x02, 0x0d, 0x16, 0x29, 0x9b, 0x01,
	0x3b, 0xa2, 0x21, 0xb4, 0xf8, 0xb0, 0xf8, 0x90, 0xab, 0x3a, 0xcb, 0x0c, 0xbf, 0x88, 0x3f, 0x09,
	0xa3, 0xf7, 0xd0, 0xbf, 0x20, 0x11, 0xa1, 0xa1, 0x87, 0xf3, 0xb6, 0x90, 0x0a, 0xc7, 0xc9, 0xd6,
	0xf3, 0x58, 0xc7, 0x2c, 0x5c, 0x07, 0x17, 0x57, 0xf4, 0x35, 0xec, 0x05, 0x58, 0xc8, 0x5b, 0xc2,
	0x50, 0x40, 0x73, 0x1f, 0x3d, 0x83, 0x16, 0xa1, 0x34, 0xa6, 0x7c, 0x54, 0xbd, 0xc9, 0x89, 0xa6,
	0x67, 0xcf, 0xd8, 0x60, 0x20, 0xce, 0x6c, 0xa3, 0x3f, 0x9b, 0x20, 0xeb, 0x6e, 0xb0, 0xf4, 0xde,
	0x11, 0x7f, 0xbb, 0x26, 0xa8, 0x07, 0x62, 0xe8, 0xe7, 0x95, 0x8b, 0xa1, 0x8f, 0x4e, 0xa1, 0xe1,
	0xbb, 0x41, 0x5e, 0x76, 0x93, 0x31, 0x86, 0x19, 0x80, 0xbe, 0x85, 0x7e, 0xea, 0xd2, 0x80, 0xa4,
	0x4e, 0xc1, 0x54, 0xce, 0x48, 0x2f, 0x83, 0xf7, 0x3b, 0xe1, 0x21, 0x84, 0x0c, 0xa0, 0x93, 0xd2,
	0x30, 0x08, 0x08, 0x4d, 0xd4, 0x16, 0xd7, 0xfe, 0xfe, 0x8e, 0x7e, 0x06, 0x69, 0x1d, 0x7b, 0x6e,
	0x26, 0xfc, 0x36, 0x17, 0xd2, 0x13, 0xed, 0xa0, 0x03, 0x6d, 0x51, 0x58, 0x33, 0x25, 0x95, 0x5f,
	0x33, 0xd7, 0xf2, 0xc1, 0x1f, 0xd7, 0xb8, 0xee, 0x49, 0xc9, 0x5d, 0xcb, 0x0d, 0x50, 0xa7, 0xc0,
	0x4e, 0xbd, 0x02, 0xab, 0x6a, 0x92, 0x3e, 0xa9, 0x26, 0xa8, 0xaa, 0x89, 0xf9, 0x26, 0xa9, 0x4b,
	0x53, 0x27, 0x0d, 0x6f, 0x89, 0x2a, 0x0f, 0x85, 0xb1, 0x80, 0x25, 0x8e, 0xd8, 0xe1, 0x2d, 0x19,
	0xfc, 0x0a, 0xbd, 0x6a, 0x77, 0x35, 0x4a, 0x7b, 0x7c, 0xa8, 0x34, 0xe9, 0x40, 0x5d, 0x83, 0x17,
	0xd0, 0xab, 0x36, 0xf8, 0x60, 0x9d, 0xfe, 0x23, 0x02, 0xe8, 0x6e, 0x60, 0x67, 0x9c, 0x7c, 0xa4,
	0x99, 0x1a, 0x6d, 0x88, 0xb5, 0xda, 0x28, 0x37, 0x52, 0xa3, 0xb2, 0x91, 0x2a, 0x9b, 0xb9, 0xf9,
	0xa9, 0xcd, 0x6c, 0xc2, 0xa3, 0x3b, 0x42, 0x13, 0xb6, 0x59, 0x4a, 0x55, 0xb4, 0x38, 0xb5, 0x4f,
	0xb5, 0xb2, 0x44, 0xed, 0x65, 0xf6, 0xd1, 0x3d, 0x6d, 0x28, 0x77, 0xf7, 0x60, 0xf4, 0x3d, 0x74,
	0x7d, 0xb2, 0x21, 0x91, 0x4f, 0x22, 0x2f, 0x24, 0x85, 0xc0, 0x64, 0xed, 0x92, 0xec, 0xf2, 0x10,
	0xb8, 0xf2, 0xc1, 0xc0, 0x86, 0xcf, 0x6b, 0x63, 0xd7, 0xcc, 0xf6, 0x9b, 0xea, 0x6c, 0xfb, 0x07,
	0x41, 0x17, 0x61, 0x92, 0x1e, 0x0c, 0xf8, 0x6c, 0x0c, 0xbd, 0xea, 0xcf, 0x1e, 0x92, 0xe1, 0x58,
	0x37, 0xce, 0xa7, 0xab, 0x85, 0xad, 0x1c, 0x21, 0x09, 0x5a, 0xe6, 0xea, 0xea, 0xfa, 0xb5, 0x22,
	0x9c, 0x7d, 0x10, 0xa0, 0x7b, 0xf8, 0xae, 0xd1, 0x63, 0x50, 0x4c, 0xcb, 0xd1, 0xb1, 0x75, 0xbd,
	0x30, 0x6c, 0xc7, 0xc0, 0xd8, 0xc2, 0xca, 0x11, 0x42, 0xd0, 0x3b, 0x5f, 0x99, 0x33, 0xc7, 0xb4,
	0x6c, 0xe7, 0xdc, 0x5a, 0x99, 0xba, 0x22, 0xa0, 0x1e, 0x00, 0xbb, 0x5e, 0xcf, 0x4d, 0xd3, 0xd0,
	0x15, 0x11, 0x7d, 0x06, 0x7d, 0xe3, 0x95, 0x31, 0x5b, 0xd9, 0x73, 0xcb, 0xcc, 0x1d, 0x1b, 0xa8,
	0x0f, 0xb2, 0x69, 0x39, 0xcb, 0xd5, 0xec, 0x85, 0xa3, 0x4f, 0x2f, 0x94, 0x26, 0x52, 0xa0, 0x6b,
	0x5a, 0x0e, 0x36, 0x96, 0xd6, 0x0a, 0xcf, 0x8c, 0xa5, 0xd2, 0x42, 0xa7, 0x80, 0xf4, 0xe9, 0x85,
	0x33, 0x5d, 0x60, 0x63, 0xaa, 0xbf, 0x76, 0x8c, 0x57, 0xf3, 0xa5, 0xbd, 0x54, 0xda, 0x67, 0x3f,
	0x42, 0xff, 0xde, 0x2b, 0x47, 0x00, 0x6d, 0xd3, 0xc2, 0x57, 0xd3, 0x85, 0x72, 0xc4, 0xce, 0xcb,
	0xb9, 0x79, 0xb1, 0x30, 0x14, 0x81, 0x35, 0x74, 0xb5, 0x5a, 0xd8, 0x73, 0x45, 0x7c, 0xd3, 0xe6,
	0x7f, 0x2b, 0x7e, 0xf8, 0x37, 0x00, 0x00, 0xff, 0xff, 0x54, 0x3f, 0xa5, 0xdd, 0x75, 0x08, 0x00,
	0x00,
}
